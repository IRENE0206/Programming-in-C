Tests for this project are in test() function of driver.c file.
Using #ifdef to differentiate between tests for parser and tests for interpreter.

First test the individual functions of the program respectively.
Then test the prog as a whole. 

Test nuclei_init & nuclei_free, prepare for other tests:
    For every single case, initiate a Nuclei first. 
    After finishing other tests, free this Nuclei. 
    Check the Nuclei pointer is set to NULL.

For functions written in driver.c:

Test separate (readFile) and its helper functions, set Nuclei:
    Test _* functions:
        Check where a char is put in Nuclei->tokens.
        Check the char in corresponding position of Nuclei->tokens.
        Check the amount of Nuclei->alltokens.

    Pass the initiated Nuclei and a string into separate function.
    Check the num of Nuclei->alltokens.
    Check the token in Nuclei->tokens.

After loading the string, Nuclei is ready for further testing.

Proceed the process by hand, and check the functions it should invoked.

For functions written in nuclei.c:

Test getToken, _strcmp, checkBracket, checkError:
    Check the currToken.
    If it is as it should be, no error is generated.

Test all the is* bool functions & all the to* bool functions:
    Given the token, check its attribute and which function it leads to.

Test next:
    Proceed to the next token, check Nuclei->currToken is updated.

Test void * returning functions:
    #ifdef INTERP, check the returned retVal.
        Check if the Nuclei->val_count & Nuclei->currToken gets updated.
    #else, check if the returned value is NULL.

Test all the other grammar-checking functions:
    Check the Nuclei->currToken after the calling the function.
    #ifdef INTERP, Check if the corresponding elements of Nuclei gets updated.

Test functions for interpreter only:

    Test retVal_init & _freeVal:
        Initiate a retVal first. 
        After finishing other tests, free this retVal. 
        Check the retVal pointer is set to NULL.

    Test free_*s functions:
        Check the Nuclei->*_generated is an array of NULLs.

    Test track* functions:
        Check the *_count is updated after.
        Check the last item in *_generated array.
        
    Test skip:
        Check the currTokenof Nuclei after.
    
    Test setRetval* functions:
        Check the type of retVal is * after set, and the corresponding * value stored in retVal;
    
    Test check* functions:
        No error will occur if type of retVal is correct.
    
    Test findVar:
        Check the returned value.
    
    Test literalToLisp:
        Check the returned value.
        Check the lisp_count & val_count of Nuclei should be updated.
    
    Test modified functions adapted from previous lisp functions:
        Check the lisp_count of Nuclei
        Check the last lisp stored in lisp_generated
    